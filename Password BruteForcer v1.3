import itertools
import string
import time

def bruteforce_password(password):
    chars = string.ascii_letters + string.digits  # a-zA-Z0-9
    max_length = len(password)  # assume we know the length to make it efficient

    attempt = 0
    start_time = time.perf_counter()

    for length in range(1, max_length + 1):
        for guess_tuple in itertools.product(chars, repeat=length):
            attempt += 1
            if attempt % 25000 == 0:
                print(f"Attempt #{attempt}: {''.join(guess_tuple)}")

            guess = ''.join(guess_tuple)
            if guess == password:
                end_time = time.perf_counter()
                elapsed = end_time - start_time
                print(f"\nPassword found: {guess}")
                print(f"Attempts: {attempt}")
                print(f"Time taken: {elapsed:.4f} seconds")
                return

    print("Password not found.")

# Example usage:
if __name__ == "__main__":
    user_password = input("Enter a password to brute-force (use only letters and numbers!): ")
    bruteforce_password(user_password)
